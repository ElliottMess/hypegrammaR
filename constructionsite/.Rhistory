chisq <- svychisq(formula(formula_string), design, na.rm = TRUE)
formula_err <- paste0("~", dependent.var, sep = "")
by <- paste0(" ~", independent.var, sep = "")
error_bars <- svyby(formula(formula_err), formula(by), design, na.rm = T, svymean)
results<-list()
results$test.results <- c(chisq$statistic, chisq$p.value)
results$test.parameters <- c(chisq$parameter, chisq$method)
results$numbers <- cbind(prop.table(as.table(chisq$observed))[1,], prop.table(as.table(chisq$observed))[2,])
results$se <- cbind(error_bars[,grep("se.", names(error_bars))][1,], error_bars[,grep("se.", names(error_bars))][2,])
return(results)
}
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
testresults
as.table(chisq$observed))[1,]
formula_string<-paste0("~",independent.var, "+", dependent.var)
chisq <- svychisq(formula(formula_string), design, na.rm = TRUE)
do.a.chi.sq <- function(independent.var = independent.var,
dependent.var = data.dependent.var,
design,
na.rm = TRUE){
formula_string<-paste0("~",independent.var, "+", dependent.var)
chisq <- svychisq(formula(formula_string), design, na.rm = TRUE)
formula_err <- paste0("~", dependent.var, sep = "")
by <- paste0(" ~", independent.var, sep = "")
error_bars <- svyby(formula(formula_err), formula(by), design, na.rm = T, svymean)
results<-list()
results$test.results <- c(chisq$statistic, chisq$p.value)
results$test.parameters <- c(chisq$parameter, chisq$method)
results$numbers <- cbind(prop.table(as.table(chisq$observed))[1,], prop.table(as.table(chisq$observed))[2,])
results$se <- cbind(error_bars[,grep("se.", names(error_bars))][1,], error_bars[,grep("se.", names(error_bars))][2,])
return(results)
}
debug(do.a.chi.sq)
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
results<-list()
results$test.results <- c(chisq$statistic, chisq$p.value)
results$test.parameters <- c(chisq$parameter, chisq$method)
prop.table(as.table(chisq$observed))[1,]
prop.table(as.table(chisq$observed))[2,]
cbind(prop.table(as.table(chisq$observed))[1,], prop.table(as.table(chisq$observed))[2,])
rbind(prop.table(as.table(chisq$observed))[1,], prop.table(as.table(chisq$observed))[2,])
(chisq$observed)[1,]
prop.table(chisq$observed)
(prop.table(chisq$observed))[1,]
do.a.chi.sq <- function(independent.var = independent.var,
dependent.var = data.dependent.var,
design,
na.rm = TRUE){
formula_string<-paste0("~",independent.var, "+", dependent.var)
chisq <- svychisq(formula(formula_string), design, na.rm = TRUE)
formula_err <- paste0("~", dependent.var, sep = "")
by <- paste0(" ~", independent.var, sep = "")
error_bars <- svyby(formula(formula_err), formula(by), design, na.rm = T, svymean)
results<-list()
results$test.results <- c(chisq$statistic, chisq$p.value)
results$test.parameters <- c(chisq$parameter, chisq$method)
results$numbers <- cbind((prop.table(chisq$observed))[1,], (prop.table(chisq$observed))[2,])
results$se <- cbind(error_bars[,grep("se.", names(error_bars))][1,], error_bars[,grep("se.", names(error_bars))][2,])
return(results)
}
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
testresults
(prop.table(chisq$observed))[1,]
a <- prop.table(chisq$observed))[1,]
a <- prop.table(chisq$observed)[1,]
b <- prop.table(chisq$observed)[2,]
results$numbers <- cbind(a,b)
cbind(a,b)
results$numbers <- rbind(a,b)
rbind(a,b)
testresults
reachR:::reach_style_barchart
results$numbers <- c(a,b)
c(a,b)
do.a.chi.sq <- function(independent.var = independent.var,
dependent.var = data.dependent.var,
design,
na.rm = TRUE){
formula_string<-paste0("~",independent.var, "+", dependent.var)
chisq <- svychisq(formula(formula_string), design, na.rm = TRUE)
formula_err <- paste0("~", dependent.var, sep = "")
by <- paste0(" ~", independent.var, sep = "")
error_bars <- svyby(formula(formula_err), formula(by), design, na.rm = T, svymean)
results<-list()
results$test.results <- c(chisq$statistic, chisq$p.value)
results$test.parameters <- c(chisq$parameter, chisq$method)
results$numbers <- c(prop.table(chisq$observed)[1,], prop.table(chisq$observed)[2,])
results$se <- cbind(error_bars[,grep("se.", names(error_bars))][1,], error_bars[,grep("se.", names(error_bars))][2,])
return(results)
}
results$max <- results$numbers - results$se
do.a.chi.sq <- function(independent.var = independent.var,
dependent.var = data.dependent.var,
design,
na.rm = TRUE){
formula_string<-paste0("~",independent.var, "+", dependent.var)
chisq <- svychisq(formula(formula_string), design, na.rm = TRUE)
formula_err <- paste0("~", dependent.var, sep = "")
by <- paste0(" ~", independent.var, sep = "")
error_bars <- svyby(formula(formula_err), formula(by), design, na.rm = T, svymean)
results<-list()
results$test.results <- c(chisq$statistic, chisq$p.value)
results$test.parameters <- c(chisq$parameter, chisq$method)
results$numbers <- c(prop.table(chisq$observed)[1,], prop.table(chisq$observed)[2,])
results$se <- cbind(error_bars[,grep("se.", names(error_bars))][1,], error_bars[,grep("se.", names(error_bars))][2,])
results$min <- results$numbers - results$se
results$max <- results$numbers + results$se
return(results)
}
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
testresults
chisq$observed
prop.table(chisq$observed)
colnames(chisq$observed)
rownames(chisq$observed)
paste0(rownames(chisq$observed), colnames(chisq$observed))
(rownames(chisq$observed)
)
for(i in rownames(chisq$observed))
{paste0(i, colnames(chisq$observed))}
names <- for(i in rownames(chisq$observed))
{paste0(i, colnames(chisq$observed))}
rownames(chisq$observed)
names <- for(i in rownames(chisq$observed))
{name <- paste0(i, colnames(chisq$observed))
names <- for(i in rownames(chisq$observed))
{name <- paste0(i, colnames(chisq$observed))}
}}}}}}
names <- for(i in rownames(chisq$observed))
{name <- paste0(i, colnames(chisq$observed))}
results$names <- c()
debugSource('~/GitHub/hypegrammaR/constructionsite/scripts/stats.R')
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
undebug(do.a.chi.sq)
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
# data$percent.change <- as.numeric(sub(",", ".", as.character(data$percent.change)))
# data$percent.change
# svymean(data$usd.percentage.change, design, na.rm = T)
# svyttest(data$'independent.var')~get(data.dependent.var), design)
#
#
# svymean(data$survey.benef.perception.process.described, design)
#
# undebug(svymean)
# svymean(~ as.numeric(age.speaker), design)
test1 <- svychisq (~modality + idp.ref, design)
ftable(test1$observed)
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
undebug(svychisq)
reachR:::reach_style_barchart
undebug(do.a.chi.sq)
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
results$names <- c()
names <- c()
do.a.chi.sq <- function(independent.var = independent.var,
dependent.var = data.dependent.var,
design,
na.rm = TRUE){
formula_string<-paste0("~",independent.var, "+", dependent.var)
chisq <- svychisq(formula(formula_string), design, na.rm = TRUE)
formula_err <- paste0("~", dependent.var, sep = "")
by <- paste0(" ~", independent.var, sep = "")
error_bars <- svyby(formula(formula_err), formula(by), design, na.rm = T, svymean)
results<-list()
results$test.results <- c(chisq$statistic, chisq$p.value)
results$test.parameters <- c(chisq$parameter, chisq$method)
beep <- function(chisq$observed){
names <- c()
for(i in rownames(chisq$observed))
{names <- c(names, paste0(i, colnames(chisq$observed)))}
return(names)}
results$names <- beep
results$numbers <- c(prop.table(chisq$observed)[1,], prop.table(chisq$observed)[2,])
results$se <- cbind(error_bars[,grep("se.", names(error_bars))][1,], error_bars[,grep("se.", names(error_bars))][2,])
results$min <- results$numbers - results$se
results$max <- results$numbers + results$se
return(results)
}
do.a.chi.sq <- function(independent.var = independent.var,
dependent.var = data.dependent.var,
design,
na.rm = TRUE){
formula_string<-paste0("~",independent.var, "+", dependent.var)
chisq <- svychisq(formula(formula_string), design, na.rm = TRUE)
formula_err <- paste0("~", dependent.var, sep = "")
by <- paste0(" ~", independent.var, sep = "")
error_bars <- svyby(formula(formula_err), formula(by), design, na.rm = T, svymean)
results<-list()
results$test.results <- c(chisq$statistic, chisq$p.value)
results$test.parameters <- c(chisq$parameter, chisq$method)
beep <- function(x){
names <- c()
for(x in rownames(chisq$observed))
{names <- c(names, paste0(i, colnames(chisq$observed)))}
return(names)}
results$names <- beep
results$numbers <- c(prop.table(chisq$observed)[1,], prop.table(chisq$observed)[2,])
results$se <- cbind(error_bars[,grep("se.", names(error_bars))][1,], error_bars[,grep("se.", names(error_bars))][2,])
results$min <- results$numbers - results$se
results$max <- results$numbers + results$se
return(results)
}
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
testresults
reachR:::reach_style_barchart
testresults
sapply(rownames(chisq$observed), paste0, colnames(chisq$observed))
typeof(results$names)
results$names <- sapply(rownames(chisq$observed), paste0, colnames(chisq$observed))
k<- sapply(rownames(chisq$observed), paste0, colnames(chisq$observed))
typeof(k)
prop.table(chisq$observed)
do.a.chi.sq <- function(independent.var = independent.var,
dependent.var = data.dependent.var,
design,
na.rm = TRUE){
formula_string<-paste0("~",independent.var, "+", dependent.var)
chisq <- svychisq(formula(formula_string), design, na.rm = TRUE)
formula_err <- paste0("~", dependent.var, sep = "")
by <- paste0(" ~", independent.var, sep = "")
error_bars <- svyby(formula(formula_err), formula(by), design, na.rm = T, svymean)
results<-list()
results$test.results <- c(chisq$statistic, chisq$p.value)
results$test.parameters <- c(chisq$parameter, chisq$method)
names_df <- sapply(rownames(chisq$observed), paste0, colnames(chisq$observed))
results$names <- c(names_df[,1], names_df[,2])
results$numbers <- c(prop.table(chisq$observed)[1,], prop.table(chisq$observed)[2,])
results$se <- cbind(error_bars[,grep("se.", names(error_bars))][1,], error_bars[,grep("se.", names(error_bars))][2,])
results$min <- results$numbers - results$se
results$max <- results$numbers + results$se
return(results)
}
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
testresults
reachR:::reach_style_barchart
reachR:::reach_style_barchart(group = testresults$names,
percent = testresults$numbers,
error_min = testresults$min,
error_max =  testresults$max)
reachR:::reach_style_barchart
c(prop.table(chisq$observed)[1,], prop.table(chisq$observed)[2,])
as.numeric(c(prop.table(chisq$observed)[1,], prop.table(chisq$observed)[2,]))
do.a.chi.sq <- function(independent.var = independent.var,
dependent.var = data.dependent.var,
design,
na.rm = TRUE){
formula_string<-paste0("~",independent.var, "+", dependent.var)
chisq <- svychisq(formula(formula_string), design, na.rm = TRUE)
formula_err <- paste0("~", dependent.var, sep = "")
by <- paste0(" ~", independent.var, sep = "")
error_bars <- svyby(formula(formula_err), formula(by), design, na.rm = T, svymean)
results<-list()
results$test.results <- c(chisq$statistic, chisq$p.value)
results$test.parameters <- c(chisq$parameter, chisq$method)
names_df <- sapply(rownames(chisq$observed), paste0, colnames(chisq$observed))
results$names <- c(names_df[,1], names_df[,2])
results$numbers <- as.numeric(c(prop.table(chisq$observed)[1,], prop.table(chisq$observed)[2,]))
results$se <- as.numeric(c(error_bars[,grep("se.", names(error_bars))][1,], error_bars[,grep("se.", names(error_bars))][2,]))
results$min <- results$numbers - results$se
results$max <- results$numbers + results$se
return(results)
}
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
testresults
reachR:::reach_style_barchart(group = testresults$names,
percent = testresults$numbers,
error_min = testresults$min,
error_max =  testresults$max)
formula_string<-paste0("~",independent.var, "+", dependent.var)
ndependent.var = independent.var,
dependent.var = data.dependent.var
tb<-svytable(~idp.ref + modality, design)
prop.table(tb, 1)
do.a.chi.sq <- function(independent.var = independent.var,
dependent.var = data.dependent.var,
design,
na.rm = TRUE){
formula_string<-paste0("~",independent.var, "+", dependent.var)
chisq <- svychisq(formula(formula_string), design, na.rm = TRUE)
table <- svytable(formula(formula_string), design, na.rm = TRUE)
formula_err <- paste0("~", dependent.var, sep = "")
by <- paste0(" ~", independent.var, sep = "")
error_bars <- svyby(formula(formula_err), formula(by), design, na.rm = T, svymean)
results<-list()
results$test.results <- c(chisq$statistic, chisq$p.value)
results$test.parameters <- c(chisq$parameter, chisq$method)
names_df <- sapply(rownames(chisq$observed), paste0, colnames(chisq$observed))
results$names <- c(names_df[,1], names_df[,2])
results$numbers <- as.numeric(c(prop.table(table, 1)[1,], prop.table(chisq$observed, 1)[2,]))
results$se <- as.numeric(c(error_bars[,grep("se.", names(error_bars))][1,], error_bars[,grep("se.", names(error_bars))][2,]))
results$min <- results$numbers - results$se
results$max <- results$numbers + results$se
return(results)
}
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
do.a.chi.sq <- function(independent.var = independent.var,
dependent.var = data.dependent.var,
design,
na.rm = TRUE){
formula_string<-paste0("~",independent.var, "+", dependent.var)
chisq <- svychisq(formula(formula_string), design, na.rm = TRUE)
table <- svytable(formula(formula_string), design)
formula_err <- paste0("~", dependent.var, sep = "")
by <- paste0(" ~", independent.var, sep = "")
error_bars <- svyby(formula(formula_err), formula(by), design, na.rm = T, svymean)
results<-list()
results$test.results <- c(chisq$statistic, chisq$p.value)
results$test.parameters <- c(chisq$parameter, chisq$method)
names_df <- sapply(rownames(chisq$observed), paste0, colnames(chisq$observed))
results$names <- c(names_df[,1], names_df[,2])
results$numbers <- as.numeric(c(prop.table(table, 1)[1,], prop.table(chisq$observed, 1)[2,]))
results$se <- as.numeric(c(error_bars[,grep("se.", names(error_bars))][1,], error_bars[,grep("se.", names(error_bars))][2,]))
results$min <- results$numbers - results$se
results$max <- results$numbers + results$se
return(results)
}
testresults<-do.a.chi.sq(dependent.var = data.dependent.var, independent.var = independent.var, design)
testresults
reachR:::reach_style_barchart(group = testresults$names,
percent = testresults$numbers,
error_min = testresults$min,
error_max =  testresults$max)
testresults$test.results
testresults$test.parameters
chisq$p.value
chisq
View(testresults)
reachR:::reach_style_barchart(group = testresults$names,
percent = testresults$numbers,
error_min = testresults$min,
error_max =  testresults$max,
horizontal = F)
+
geom_text(aes(x=(2),
label=paste0("To determine", hypothesis.type, testresults$test.parameters[[3]], "returned a p value of",
,size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5
)
reachR:::reach_style_barchart(group = testresults$names,
percent = testresults$numbers,
error_min = testresults$min,
error_max =  testresults$max)
reachR:::reach_style_barchart(group = testresults$names,
percent = testresults$numbers,
error_min = testresults$min,
error_max =  testresults$max)
+
geom_text(aes(x=(2),
label=paste0("To determine", hypothesis.type, testresults$test.parameters[[3]], "returned a p value of",
,size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
reachR:::reach_style_barchart(group = testresults$names,
percent = testresults$numbers,
error_min = testresults$min,
error_max =  testresults$max)
reachR:::reach_style_barchart(group = testresults$names,
percent = testresults$numbers,
error_min = testresults$min,
error_max =  testresults$max)
+ geom_text(aes(x=(2),
y=(2),
label=paste0("To determine", hypothesis.type, testresults$test.parameters[[3]], "returned a p value of",
testresults$test.results[[2]]))
,size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
+ geom_text(aes(x=2,
y=2,
label=paste0("To determine", hypothesis.type, testresults$test.parameters[[3]], "returned a p value of",
testresults$test.results[[2]]))
,size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
+ geom_text(aes(label=paste0("To determine", hypothesis.type, testresults$test.parameters[[3]], "returned a p value of",
testresults$test.results[[2]]))
,size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
testresults$test.parameters[[3]]
test_name <- testresults$test.parameters[[3]]
p_value <- testresults$test.results[[2]]
reachR:::reach_style_barchart(group = testresults$names,
percent = testresults$numbers,
error_min = testresults$min,
error_max =  testresults$max)
+ geom_text(aes(label= paste0("To determine", hypothesis.type, test_name, "returned a p value of",
p_value))
,size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
reach_style_barchart(group = testresults$names,
percent = testresults$numbers,
error_min = testresults$min,
error_max =  testresults$max)
+ geom_text(aes(label= paste0("To determine", hypothesis.type, test_name, "returned a p value of",
p_value))
,size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
reachR:::reach_style_barchart(group = testresults$names,
percent = testresults$numbers,
error_min = testresults$min,
error_max =  testresults$max) +
geom_text(aes(label= paste0("To determine", hypothesis.type, test_name, "returned a p value of", p_value)),
size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
chart + geom_text(aes(label= paste0("To determine", hypothesis.type, test_name, "returned a p value of", p_value)),
size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
chart <- reach_style_barchart(group = testresults$names,
percent = testresults$numbers,
error_min = testresults$min,
error_max =  testresults$max)
chart + geom_text(aes(label= paste0("To determine", hypothesis.type, test_name, "returned a p value of", p_value)),
size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
chart + geom_text(aes(x =2,
y = 2,
label= paste0("To determine", hypothesis.type, test_name, "returned a p value of", p_value)),
size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
chart + geom_text(aes(x =2,
y = 2,
label= paste0("To determine ", hypothesis.type, "\n" test_name, " returned a p value of ", p_value)),
size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
chart + geom_text(aes(x =2,
y = 2,
label= paste0("To determine ", hypothesis.type, "\n", test_name, " returned a p value of ", p_value)),
size=4,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
chart + geom_text(aes(x =4,
y = 2,
label= paste0("To determine ", hypothesis.type, "\n", test_name, "\n"
," returned a p value of ", p_value)),
size=3,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
chart + geom_text(aes(x =4,
y = 2,
," returned a p value of ", round(p_value,2)),
size=3,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
chart + geom_text(aes(x =4,
label= paste0("To determine ", hypothesis.type, "\n", test_name, "\n"
," returned a p value of ", round(p_value,2)),
size=3,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
chart + geom_text(aes(x =4,
chart + geom_text(aes(x =4,
y = 2,
label= paste0("To determine ", hypothesis.type, "\n", test_name, "\n"
," returned a p value of ", round(p_value,2))),
size=3,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
chart + geom_text(aes(x =4,
y = 2,
label= paste0("To determine ", hypothesis.type, "\n", test_name, "\n"
," returned a p value of ", round(p_value,6))),
size=3,
family="Arial Narrow",
col='#000000',
hjust=0,
vjust=0.5)
chisq$observed
svyby(formula(formula_err), formula(by), design, na.rm = T, svymean)
